// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlog.Data.Context;

#nullable disable

namespace MyBlog.Data.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyBlog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4705572-b7b0-4775-b02b-74f513d0cc89"),
                            CategoryId = new Guid("78f5f289-ffb9-4588-b3c9-888407ccf129"),
                            Content = "Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500'lerden beri endüstri standardı sahte metinler olarak kullanılmıştır.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(1818),
                            IsDeleted = false,
                            Title = "Asp.Net Core Deneme Makalesi 1",
                            ViewCount = 10
                        },
                        new
                        {
                            Id = new Guid("41646b7a-8c51-4a7a-86f7-c834a2ff5881"),
                            CategoryId = new Guid("c0f71c92-e8c9-4d75-b3ec-c00c9240fe8b"),
                            Content = "Visual Studio Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500'lerden beri endüstri standardı sahte metinler olarak kullanılmıştır.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(1822),
                            IsDeleted = false,
                            Title = "Visual Studio Deneme Makalesi 1",
                            ViewCount = 10
                        });
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78f5f289-ffb9-4588-b3c9-888407ccf129"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(1949),
                            IsDeleted = false,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            Id = new Guid("c0f71c92-e8c9-4d75-b3ec-c00c9240fe8b"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(1952),
                            IsDeleted = false,
                            Name = "Visual Studio 2022"
                        });
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b61018f1-65c1-4ab1-98aa-bce223156590"),
                            ArticleId = new Guid("e4705572-b7b0-4775-b02b-74f513d0cc89"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(2020),
                            FileName = "images/TestImage",
                            FileType = "JPEG",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("58f06691-f7ba-4794-9da4-bb4895bf8426"),
                            ArticleId = new Guid("41646b7a-8c51-4a7a-86f7-c834a2ff5881"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2022, 12, 25, 23, 37, 48, 744, DateTimeKind.Local).AddTicks(2024),
                            FileName = "images/vs2022images",
                            FileType = "JPEG",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Article", b =>
                {
                    b.HasOne("MyBlog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Image", b =>
                {
                    b.HasOne("MyBlog.Entity.Entities.Article", "Article")
                        .WithMany("Images")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Article", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MyBlog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
